name: "mnist_siamese_train_test"
input: "data"
input_dim: 1
input_dim: 2
input_dim: 600
input_dim: 400
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "gaussian"
	  std: 0.5
#      type: "constant"
#	  value: 0
    }
  }
}
layer {
  name: "bn1"
  type: "BN"
  bottom: "conv1"
  top: "bn1"
  bn_param {
	scale_filler {
	  type: "constant"
	  value: 1
	}
	shift_filler {
	  type: "gaussian"
	  std: 1
#      type: "constant"
#	  value: 0
	}
 }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "bn1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "gaussian"
	  std: 0.5
#      type: "constant"
#	  value: 0
    }
  }
}
layer {
  name: "bn2"
  type: "BN"
  bottom: "conv2"
  top: "bn2"
  bn_param {
	scale_filler {
	  type: "constant"
	  value: 1
	}
	shift_filler {
	  type: "gaussian"
	  std: 1
#      type: "constant"
#	  value: 0
	}
 }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "bn2"
  top: "conv3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "gaussian"
	  std: 0.5
#      type: "constant"
#	  value: 0
    }
  }
}
layer {
  name: "bn3"
  type: "BN"
  bottom: "conv3"
  top: "bn3"
  bn_param {
	scale_filler {
	  type: "constant"
	  value: 1
	}
	shift_filler {
	  type: "gaussian"
	  std: 1
#      type: "constant"
#	  value: 0
	}
 }
}
layer {
  name: "output"
  type: "Convolution"
  bottom: "bn3"
  top: "output"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 3
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
